{"version":3,"sources":["Components/Grid/SubGrid.jsx","Components/Grid/Grid.jsx","Components/SudokuSolver.jsx","Components/DndKeyboard/DndKeyboard.jsx","Components/SolverAlgorithms/Heuristics/GenericFunctions.jsx","Components/SolverAlgorithms/GreedyBacktrack.jsx","Components/GridGenerator.jsx","Components/SolverAlgorithms/Heuristics/NakedSubset.jsx","Components/SolverAlgorithms/Heuristics/DisjointChain.jsx","Components/SolverAlgorithms/Heuristics/LoneNumber.jsx","Components/SolverAlgorithms/HeuristicBacktrack.jsx","Components/SolverAlgorithms/Heuristics/GlobalHeuristic.jsx","Components/DropDown/Dropdown.jsx","Components/Trash/Trash.jsx","Components/ToolBar/ToolBar.jsx","App.js","serviceWorker.js","index.js"],"names":["iModify","jModify","modifyMatrix","SubGrid","state","setTrash","event","target","className","id","console","log","myTrash","document","getElementsByClassName","style","border","backgroundColor","myDrag","color","setTrashToNormal","handleDragStart","e","transitionDuration","fontSize","fontWeight","handleDrag","addEventListener","handleDragEnd","removeEventListener","setTimeout","props","changeMatrix","toPrint","iMin","this","iRange","iMax","jMin","jRange","jMax","filledStyle","gridTemplateColumns","gridTemplateRows","marginLeft","marginTop","i","j","currentCell","matrix","newElement","key","draggable","onDragStart","onDrag","onDragEnd","push","map","number","index","Component","Grid","isValid","board","row","col","k","m","Math","floor","n","sudokuSolver","data","animation","newData","deepCopy","newMatrix","newRow","getValidNumbers","validNumbers","getMatrixOfValidNumbers","NUMBER_LIST","CURRENT_NUMBER","LAST_DRAG_POSITION","MODIFY_MATRIX","ON_TRASH_CONTAINER","DndKeyboard","setGrid","Number","setGridToNormal","alert","changeNumber","onMouseOver","updateGridAfterFill","i1","currentNumbers","length","splice","myData","j1","iBox","jBox","isSubset","L1","L2","i2","n1","n2","myDeleteFunction","intersect","toDelete","count","removeNumber","L","removeCouple","C","createIndicesArray","indices","myCopy","currentElement","greedySudokuSolver","possibleCell","bestCell","min","idx","createBoard","strOfMatrices","randInt","initialBoard","nullMatrix","createNullMatrix","parseInt","nonNullCells","Animation","randomMatrix","createRandomMatrix","nbrAnimation","checkElement","random","element","list","nakedSubset","makeChange","nakedSubsetRow","nakedSubsetColumn","nakedSubsetBox","occurence","S","toString","currentLength","totalIndices","coordonate","totalCoordonates","currentCoord","coord","disjointChain","disjointChainRow","disjointChainColumn","disjointChainBox","objective","j2","l","loneNumber","loneNumberRow","loneNumberColumn","loneNumberBox","coordonates","currentList","currentNumber","heuristicBacktrack","makeAdditionalTour","heuristicRoutine","minLength","currentNumbersToTest","newData2","newData3","newData4","initialX","initialY","currentX","currentY","rect","DropdownButton","useClassicBacktrack","setSolver","useGreedyBacktrack","useTwoStageAlgo","children","src","height","width","ToolBar","matrices","solver","label","showHelp","solved","actionAnimation","animationSpeed","firstDelay","degressive","setMatrix","myFunction","newAnimation","newLabel","setState","solveButtonMsg","solveTheGrid","delay","prevMatrix","printValidNumbers","generateNewGrid","myAnimation","setPrevMatrix","grid","subGrids","querySelectorAll","subGrid","setValidNumbers","fetch","then","response","text","helpInfo","solveInfo","Dropdown","onClick","borderRadius","animationName","dragging","Trash","clientX","clientY","getBoundingClientRect","right","bottom","cursor","left","top","handleEndDrag","onMouseDown","onMouseMove","onMouseUp","App","myMatrix","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72eb0f34.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport \"./SubGrid.css\"\n\n\nvar iModify\nvar jModify\nvar modifyMatrix\nexport default class SubGrid extends Component {\n\n\tstate = {\n\t\tiModify: -1,\n\t\tjModify: -1,\n\t\tmodifyMatrix: true\n\t}\n\n\tsetTrash = (event) => {\n\t\tif (event.target.className === \"trashContainer\" || event.target.id === \"TrashText\") {\n\t\t\tconsole.log(event.target.id)\n\t\t\tmodifyMatrix = true\n\t\t\tvar myTrash = document.getElementsByClassName(\"trashContainer\")[0]\n\t\t\tmyTrash.style.border = \"solid 8px rgba(170,100,105,0.9)\"\n\t\t\tmyTrash.style.backgroundColor = \"rgba(255,205,215,1)\"\n\t\t\tvar myDrag = document.getElementsByClassName(\"dragSection\")[0]\n\t\t\tmyTrash.style.color = \"rgba(170,100,105,0.9)\"\n\t\t\tmyDrag.style.color = \"rgba(170,100,105,0.9)\"\n\t\t} else {\n\t\t\tmodifyMatrix = false \n\t\t}\n\t}\n\n\tsetTrashToNormal = (event) => {\n\t\t\tif (event.target.className === \"trashContainer\" || event.target.id === \"TrashText\") {\n\t\t\t\tvar myTrash = document.getElementsByClassName(\"trashContainer\")[0]\n\t\t\t\tvar myDrag = document.getElementsByClassName(\"dragSection\")[0]\n\t\t\t\tmyTrash.style.border = \"solid 3px rgba(105,225,185,1)\"\n\t\t\t\tmyTrash.style.backgroundColor = \"rgba(205,255,215,0.7)\"\n\t\t\t\tmyTrash.style.color = \"rgba(120,200,125)\"\n\t\t\t\tmyDrag.style.color = \"rgba(120,200,125)\"\n\t\t\t} \n\t\t}\n\n\thandleDragStart = (e) => {\n\t\tiModify= e.target.id[0]\n\t\tjModify= e.target.id[2]\n\t\tvar myTrash = document.getElementsByClassName(\"trashContainer\")[0]\n\t\tvar myDrag = document.getElementsByClassName(\"dragSection\")[0]\n\t\tmyTrash.style.transitionDuration = '0.2s'\n\t\tmyTrash.style.fontSize = \"2vw\"\n\t\tmyTrash.style.fontWeight = \"bold\"\n\t\tmyDrag.style.fontSize = \"1vw\"\n\t\tmyDrag.style.fontWeight = \"normal\"\n\t}\n\n\thandleDrag = () => {\n\t\tdocument.addEventListener(\"dragenter\", this.setTrash)\n\t\tdocument.addEventListener(\"dragleave\", this.setTrashToNormal)\n\n\t}\n\n\thandleDragEnd = () => {\n\t\tdocument.removeEventListener(\"dragenter\", this.setTrash)\n\t\tvar myTrash = document.getElementsByClassName(\"trashContainer\")[0]\n\t\tmyTrash.style.fontSize = \"1vw\"\n\t\tmyTrash.style.fontWeight = \"normal\"\n\t\tsetTimeout(()=>{\n\t\t\tmyTrash.style.transitionDuration = null\n\t\t},500)\n\t\tif (modifyMatrix) {\n\t\t\tthis.props.changeMatrix(iModify, jModify, 0)\n\t\t}\n\t}\n\n\trender(){\n\t\tconst toPrint = []\n\t\tconst iMin = this.props.iRange[0]\n\t\tconst iMax = this.props.iRange[1]\n\t\tconst jMin = this.props.jRange[0]\n\t\tconst jMax = this.props.jRange[1]\n\t\tconst filledStyle = {\n\t\t\t\t\t\t \t\tgridTemplateColumns: \"5vh\", \n\t\t\t\t\t\t \t\tgridTemplateRows: \"5vh\",\n\t\t\t\t\t\t \t\tmarginLeft: \"1.9vh\",\n\t\t\t\t\t\t \t\tmarginTop: \"0.6vh\",\n\t\t\t\t\t\t \t\tfontSize:\"4.5vh\"\n\t\t\t\t\t\t}\n\t\tfor (let i = iMin; i<iMax+1; i++){\n\t\t\tfor (let j = jMin; j<jMax+1; j++){\n\t\t\t\tvar currentCell = this.props.matrix[i][j]\n\t\t\t\tif (currentCell > 0 && typeof(currentCell) === \"number\"){\n\t\t\t\t\tlet newElement = <div \n\t\t\t\t\t\tkey = {i*10+j} \n\t\t\t\t\t\tclassName = \"filled-grid-item\" \n\t\t\t\t\t\tid = {[i,j]}\n\t\t\t\t\t\tdraggable = {\"true\"}\n\t\t\t\t\t\tonDragStart = {this.handleDragStart}\n\t\t\t\t\t\tonDrag = {this.handleDrag}\n\t\t\t\t\t\tonDragEnd = {this.handleDragEnd}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<h1 \n\t\t\t\t\t\t \tclassName = \"certain-number\" \n\t\t\t\t\t\t \tstyle = {filledStyle}> \n\t\t\t\t\t\t \t{this.props.matrix[i][j]} \n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\ttoPrint.push(newElement)\n\t\t\t\t} else if (currentCell === 0 && typeof(currentCell) === \"number\"){\n\t\t\t\t\tlet newElement = <div \n\t\t\t\t\t\tkey = {i*10+j} \n\t\t\t\t\t\tclassName = \"grid-item\" \n\t\t\t\t\t\tid = {[i,j]}\n\t\t\t\t\t\tdraggable = {\"true\"}\n\t\t\t\t\t\tonDragStart = {this.handleDragStart}\n\t\t\t\t\t\tonDrag = {this.handleDrag}\n\t\t\t\t\t\tonDragEnd = {this.handleDragEnd} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\ttoPrint.push(newElement)\n\t\t\t\t} else {\n\t\t\t\t\tlet newElement = \n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tkey = {i*10+j} \n\t\t\t\t\t\t\tclassName = \"grid-item\" \n\t\t\t\t\t\t\tid = {[i,j]}\n\t\t\t\t\t\t\tdraggable = {\"false\"}>\n\t\t\t\t\t\t\t{currentCell.map( (number, index) => <h1 key = {100*i+10*j+index} className = \"uncertain-number\" > {number} </h1>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\ttoPrint.push(newElement)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn(\n\t\t\t<div className = \"grid-container\">\n\t\t\t\t{toPrint}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React,{Component} from \"react\";\nimport SubGrid from \"./SubGrid\"\nimport \"./Grid.css\"\n\n\n\nexport default class Grid extends Component {\n\n\trender(){\n\t\treturn(\n\t\t\t<div className = \"grid\">\n\t\t\t\t<div className = \"grid-container\">\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[0,2]} jRange = {[0,2]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[0,2]} jRange = {[3,5]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[0,2]} jRange = {[6,8]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[3,5]} jRange = {[0,2]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[3,5]} jRange = {[3,5]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[3,5]} jRange = {[6,8]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[6,8]} jRange = {[0,2]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[6,8]} jRange = {[3,5]}/>\n\t\t\t\t\t<SubGrid changeMatrix = {this.props.changeMatrix} matrix ={this.props.matrix} iRange = {[6,8]} jRange = {[6,8]}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n////rgba(60,110,150,1)\n\n\n\n","export function isValid(board, row, col, k) {\n    for (let i = 0; i < 9; i++) {\n        const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n        const n = 3 * Math.floor(col / 3) + i % 3;\n        if (board[row][i] === k || board[i][col] === k || board[m][n] === k) {\n          return false;\n        }\n    }\n    return true;\n}\n\n\nexport function sudokuSolver(data, animation) {\n    for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n            if (data[i][j] == 0) {\n                for (let k = 1; k <= 9; k++) {\n                    if (isValid(data, i, j, k)) {\n                        data[i][j] = k;\n                        let newData = deepCopy(data)\n                        animation.push(newData)\n                        if (sudokuSolver(data, animation)) {\n                            return true;\n                        } else {\n                            data[i][j] = 0;\n                            let newData = deepCopy(data)\n                            animation.push(newData)\n                        }\n                    }\n                }\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nexport function deepCopy(matrix){\n\tlet newMatrix = []\n\tfor (let i=0; i<9; i++) {\n\t\tlet newRow = [...matrix[i]]\n\t\tnewMatrix.push(newRow)\n\t}\n\treturn newMatrix\n}\n\n\nfunction getValidNumbers (i,j,data) {\n    let validNumbers = []\n    for (let number=1; number<10; number++){\n      if (isValid(data, i,j,number)){\n        validNumbers.push(number)\n      }\n    }\n    return validNumbers\n  }\n\n  export function getMatrixOfValidNumbers (data) {\n    let newMatrix = data\n    for (let i=0; i<9; i++){\n      for (let j = 0; j<9; j++){\n        if (newMatrix[i][j] == 0 || typeof(newMatrix[i][j]) === \"object\") {\n          let validNumbers = getValidNumbers(i,j,data)\n          newMatrix[i][j] = validNumbers\n        }\n      }\n    }\n    return newMatrix\n  }\n\n\n\n\n\n\n\n\n\n\n\n","import React, {Component} from \"react\"\nimport \"./DndKeyboard.css\"\nimport {isValid} from \"../SudokuSolver.jsx\"\n\n\nconst NUMBER_LIST = [1,2,3,4,5,6,7,8,9]\nlet CURRENT_NUMBER = 0\nlet LAST_DRAG_POSITION = [-1,-1]\nlet MODIFY_MATRIX = false\nlet ON_TRASH_CONTAINER = false\n\n\nexport default class DndKeyboard extends Component {\n\n\tsetGrid = (event) => {\n\t\tif ( event.target.className === \"grid-item\" || event.target.className === \"uncertain-number\") {\n\n\t\t\t\n\t\t\tMODIFY_MATRIX = true\n\t\t\tON_TRASH_CONTAINER = false\n\t\t\tif ( event.target.className === \"grid-item\"){\n\t\t\t\tLAST_DRAG_POSITION = [Number(event.target.id[0]),Number(event.target.id[2])]\n\t\t\t\tevent.target.style.backgroundColor = \"rgba(150,230,250)\";\n\t\t\t\tevent.target.style.border = \"1vh solid rgba(60,110,150,1)\"\n\t\t\t\tevent.target.style.color = \"rgba(150,230,250)\";\n\t\t\t}\n\t\t} else if (event.target.className === \"trashContainer\"){\n\t\t\tON_TRASH_CONTAINER = true\n\t\t\tMODIFY_MATRIX = false\n\t\t} else {\n\t\tMODIFY_MATRIX = false\n\t\tON_TRASH_CONTAINER = false\n\n\t\t}\n\t}\n\n\tsetGridToNormal = (event) => {\n\t\t\tif ( event.target.className === \"grid-item\") {\n\t\t\t\tevent.target.style.backgroundColor = \"rgba(200,245,255,1)\";\n\t\t\t\tevent.target.style.border = \"0.08vh solid rgba(60,110,150,1)\";\n\t\t\t\tevent.target.style.color = \"lightpink\";\n\t\t  } \n\t\t}\n\n\thandleDrag = (event) => {\n\t\tdocument.addEventListener(\"dragenter\", this.setGrid);\n\t\tdocument.addEventListener(\"dragleave\", this.setGridToNormal);\n\t}\n\n\thandleDragEnd = (event) => {\n\t\tdocument.removeEventListener(\"dragenter\", this.setGrid);\n\t\tdocument.removeEventListener(\"dragleave\", this.setGridToNormal);\n\t\tif (MODIFY_MATRIX){\n\t\t\tlet i = LAST_DRAG_POSITION[0]\n\t\t\tlet j = LAST_DRAG_POSITION[1]\n\t\t\t\n\t\t\tif (isValid(this.props.matrix,i,j,CURRENT_NUMBER)) {\n\t\t\t\tthis.props.changeMatrix(i,j,CURRENT_NUMBER)\n\t\t\t}\n\t\t} else if (ON_TRASH_CONTAINER) {\n\t\t\talert(\"Nice try! But you cannot remove the keyBoard! ;)\")\n\t\t}\n\t}\n\n\tchangeNumber = (number) => {\n\t\tCURRENT_NUMBER = number\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<footer className = \"DndStyle\">\n\t\t\t\t\t{ NUMBER_LIST.map( (number) => \n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclassName = \"Key\" \n\t\t\t\t\t\t\tdraggable = {true} \n\t\t\t\t\t\t\tkey = {number} \n\t\t\t\t\t\t\tonDragStart = {this.handleDrag}\n\t\t\t\t\t\t\tonDragEnd = {this.handleDragEnd}\n\t\t\t\t\t\t\tonMouseOver = {() => this.changeNumber(number)}> {number} \n\t\t\t\t\t\t</div> ) }\n\t\t\t</footer>\n\t\t)\n\t}\n}\n","export function isValid(board, row, col, k) {\n    for (let i = 0; i < 9; i++) {\n        const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\n        const n = 3 * Math.floor(col / 3) + i % 3;\n        if (board[row][i] === k || board[i][col] === k || board[m][n] === k) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function updateGridAfterFill(i, j, number, data, animation){\n\t// Check the Column\n\tfor (let i1 = 0; i1 < 9; i1++){\n\t\tif (typeof(data[i1][j]) === \"object\"){\n\t\t\tlet currentNumbers = data[i1][j]\n\t\t\tfor (let k = 0; k<currentNumbers.length; k++){\n\t\t\t\tlet currentNumber = currentNumbers[k]\n\t\t\t\tif (currentNumber === number){\n\t\t\t\t\tcurrentNumbers.splice(k,1)\n\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\tanimation.push(myData)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check the Row\n\tfor (let j1 = 0; j1 < 9; j1++){\n\t\tif (typeof(data[i][j1]) === \"object\"){\n\t\t\tlet currentNumbers = data[i][j1]\n\t\t\tfor (let k = 0; k<currentNumbers.length; k++){\n\t\t\t\tlet currentNumber = currentNumbers[k]\n\t\t\t\tif (currentNumber === number){\n\t\t\t\t\tcurrentNumbers.splice(k,1)\n\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\tanimation.push(myData)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check the box\n\tlet iBox = i - i%3\n\tlet jBox = j - j%3\n\tfor (let i1 = iBox; i1 < iBox + 3; i1++){\n\t\tfor (let j1 = jBox; j1 < jBox + 3; j1++){\n\t\t\tif (typeof(data[i1][j1] === \"object\")){\n\t\t\t\tlet currentNumbers = data[i1][j1]\n\t\t\t\tfor (let k = 0; k<currentNumbers.length; k++){\n\t\t\t\t\tlet currentNumber = currentNumbers[k]\n\t\t\t\t\tif (currentNumber === number) {\n\t\t\t\t\t\tcurrentNumbers.splice(k, 1)\n\t\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\t\tanimation.push(myData)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \n}\n\n// test if L2 is a subset of L1 in O(n1+n2) time complexity\nexport function isSubset(L1, L2){\n\t//this approach works because L1 and L2 are sorted\n\tlet i1 = 0\n\tlet i2 = 0\n\tlet n1 = L1.length\n\tlet n2 = L2.length\n\tif (n2>n1){\n\t\treturn false\n\t}\n\twhile (i2<n2 && i1<n1){\n\t\tif (L2[i2]<L1[i1]){\n\t\t\treturn false\n\t\t} else if (L2[i2]>L1[i1]){\n\t\t\ti1++\n\t\t} else {\n\t\t\ti1++\n\t\t\ti2++\n\t\t}\n\t}\n\treturn (i2===n2)\n}\n\n//Take all the elements of L2, and remove them from L1 in O(n1+n2) time complexity\nexport function myDeleteFunction(L1, L2){\n\t//Again,  works because the list are sorted\n\tlet intersect = false \n\tif (typeof(L1) === \"number\") {\n\t\treturn false\n\t}\n\tlet toDelete = []\n\tlet i1 = 0\n\tlet i2 = 0\n\tlet n1 = L1.length\n\tlet n2 = L2.length\n\twhile (i2<n2 && i1<n1){\n\t\tif (L2[i2]<L1[i1]){\n\t\t\ti2++\n\t\t} else if (L2[i2]>L1[i1]){\n\t\t\ti1++\n\t\t} else {\n\t\t\tintersect = true \n\t\t\ttoDelete.push(i1)\n\t\t\ti1++\n\t\t\ti2++\n\t\t}\n\t}\n\tif (toDelete.length){\n    \tlet count = 0\n\t\tfor (let i=0; i<toDelete.length; i++){\n\t\t\tlet index = toDelete[i]\n\t\t\tL1.splice(index-count,1)\n      \tcount++\n\t\t}\n\t}\n\treturn intersect\n}\n\n// Remove a given Number from a list (Used for the rows and columns)\nexport function removeNumber(L, number){\n\tfor (let i = 0; i<L.length; i++){\n\t\tif (L[i] === number){\n\t\t\tL.splice(i, 1)\n\t\t\treturn\n\t\t}\n\t}\n}\n\n//Remove a couple of index from a list (Used for the boxes)\nexport function removeCouple(L, C){\n\tfor (let i=0; i<L.length; i++){\n\t\tlet C2 = L[i]\n\t\tif (isSubset(C, C2)){\n\t\t\tL.splice(i, 1)\n\t\t\treturn\n\t\t}\n\t}\n}\n\nexport function createIndicesArray(n) {\n\tlet indices = []\n\tfor (let i=0; i<n; i++){\n\t\tindices.push(i)\n\t}\n\treturn indices\n}\n\n\n\nexport function checkEquality(L1, L2) {\n\tlet n1 = L1.length\n\tlet n2 = L2.length\n\tif (n1 !== n2){\n\t\treturn false\n\t}\n\tlet i1 = 0\n\tlet i2 = 0\n\twhile (i1<n1){\n\t\tif (L1[i1] === L2[i2]) {\n\t\t\ti1++\n\t\t\ti2++\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} \n\treturn true\n}\nfunction deepCopyArray(myArray){\n\tif(typeof(myArray) === \"number\"){\n\t\treturn myArray\n\t}\n\tlet newArray = [...myArray]\n\treturn newArray\n}\n\nexport function deepCopy(matrix){\n\tlet myCopy = []\n\tif (typeof(matrix) !== \"object\"){\n\t\treturn matrix\n\t}\n\tfor (let i = 0; i < matrix.length; i++){\n\t\tlet currentElement = deepCopy(matrix[i])\n\t\tmyCopy.push( currentElement)\n\t}\n\treturn myCopy\n\n}\n\nexport function deepCopy2(matrix){\n    let newMatrix = []\n    for (let i=0; i<9; i++) {\n        let newRow = [...deepCopyArray(matrix[i])]\n        newMatrix.push(newRow)\n    }\n    return newMatrix\n}","import {isValid, deepCopy} from \"./Heuristics/GenericFunctions\"\r\r\r\r\rexport default function greedySudokuSolver(data, animation) {\r    \r    //create an array with all the empty cells\r    let possibleCell = []\r    for (let i = 0; i < 9; i++) {\r        for (let j = 0; j < 9; j++) {\r            if (data[i][j] === 0){\r                possibleCell.push([i,j])\r            }\r        }\r    }\r\r    // base-case : if there is no cells to fill, we're done -> return true !\r    if (possibleCell.length === 0){\r        return true\r    }\r\r    //Determine which cell is the \"Best\" (the one with the smallest number of candidates)\r    let bestCell = [-1,-1]\r    let min = 9\r    for (let idx = 0; idx<possibleCell.length; idx++){\r        let i = possibleCell[idx][0]\r        let j = possibleCell[idx][1]\r        let count = 0\r        for (let number = 1; number<10; number++){\r            if (isValid(data, i, j, number)){\r                count++\r            }\r        }\r        if(count<min){\r            bestCell = [i,j]\r            min = count\r        }\r    }\r\r    //Start to backtrack with the best cell, that we have just identified\r    let i = bestCell[0]\r    let j = bestCell[1]\r    for (let number = 1; number<10; number++){\r        if (isValid(data, i, j, number)){\r            data[i][j] = number;\r            let newData = deepCopy(data)\r            animation.push(newData)\r            if (greedySudokuSolver(data, animation)) {\r                return true;\r            } else {\r                data[i][j] = 0;\r                let newData = deepCopy(data)\r                animation.push(newData)\r            }\r        }\r    }\r\r    // if we come here, it means that we cannot solve the current Sudoku -> return false! \r    return false                \r}\r\r\r","\nexport function createBoard(strOfMatrices){\n\t\n\tlet nbrOfPossibleMatrix = strOfMatrices.length/81\n\tlet k = randInt(nbrOfPossibleMatrix)\n\tlet initialBoard = createNullMatrix()\n\tfor (let i =0; i<9; i++){\n\t\tfor (let j = 0; j<9; j++){\n\t\t\tinitialBoard[i][j] = parseInt(strOfMatrices[81*k + 9*i + j])\n\t\t}\n\t}\n\n\tlet nonNullCells = []\n\tfor(let i=0; i<9; i++){\n\t\tfor (let j=0; j<9; j++){\n\t\t\tif (initialBoard[i][j]>0){\n\t\t\t\tnonNullCells.push([i,j])\n\t\t\t}\n\t\t}\n\t}\n\tlet firstMatrix = createRandomMatrix()\n\tlet Animation = [firstMatrix]\n\t\n\n\tfor (let nbrAnimation =0; nbrAnimation<20; nbrAnimation ++){\n\t\tlet matrix = deepCopy(Animation[Animation.length-1])\n\t\tfor (let i = 0; i<9; i++){\n\t\t\tfor (let j=0; j<9; j++){\n\t\t\t\tif ( checkElement([i,j], nonNullCells) ){\n\t\t\t\t\tmatrix[i][j] = randInt(9) + 1\n\t\t\t\t} else {\n\t\t\t\t\t if(matrix[i][j] > 0){\n\t\t\t\t\t \tmatrix[i][j] = randInt(9) \n\t\t\t\t\t }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tAnimation.push(matrix)\n\t}\n\tAnimation.push(initialBoard)\n\treturn Animation\n}\n\nfunction randInt(k){\n\treturn (Math.floor(k*Math.random()))\n} \n\nfunction createNullMatrix() {\n\tlet nullMatrix = []\n\tfor (let i=0; i<9; i++){\n\t\tnullMatrix.push([0,0,0,0,0,0,0,0,0])\n\t}\n\treturn nullMatrix\n}\n\nfunction createRandomMatrix() {\n\tlet randomMatrix = []\n\tfor (let i=0; i<9; i++){\n\t\trandomMatrix.push([1,4,3,2,2,5,3,9,2])\n\t}\n\treturn randomMatrix\n}\n\nfunction checkEquality (L1,L2) {\n\tif (L1[0] === L2[0]){\n\t\tif (L1[1] === L2[1]){\n\t\t\treturn true\n\t\t}\n\t} \n\treturn false\n}\n\nfunction checkElement(element, list){\n\tfor (let i=0; i<list.length; i++){\n\t\tif (checkEquality(element, list[i])){\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nfunction deepCopy(matrix){\n\tlet newMatrix = []\n\tfor (let i=0; i<9; i++) {\n\t\tlet newRow = [...matrix[i]]\n\t\tnewMatrix.push(newRow)\n\t}\n\treturn newMatrix\n}","import {removeCouple, removeNumber, myDeleteFunction, createIndicesArray, checkEquality, deepCopy} from \"./GenericFunctions\"\n\n\nexport function nakedSubset(data, animation){\n\tlet makeChange = false \n\tfor (let i=0; i<9; i++){\n\t\tif (nakedSubsetRow(i, data, animation)){ // do not write something like \"if (a || b || c)\" because if a is true, neither test b nor c is tested\n\t\t\tmakeChange = true \n\t\t}\n\t\tif (nakedSubsetColumn(i, data, animation)){\n\t\t\tmakeChange = true \n\t\t}\n\t\tif (nakedSubsetBox(i, data, animation)){\n\t\t\tmakeChange = true \n\t\t}\n\t}\n\treturn makeChange\n}\n\nexport function nakedSubsetRow(i, data, animation){\n\tlet makeChange = false\n\tlet indices = {}\n\tlet occurence = {}\n\t// Initialisation of indices and occurences\n\tfor (let j = 0; j<9; j++){\n\t\tif (typeof(data[i][j]) === \"object\"){\n\t\t\tlet S = data[i][j].toString()\n\t\t\toccurence[S] = 0\n\t\t\tindices[S] = [] \n\t\t}\n\t}\n\n\tfor (let j = 0; j<9; j++){\n\t\tif (typeof(data[i][j]) === \"object\"){\n\t\t\tlet S = data[i][j].toString()\n\t\t\toccurence[S]++\n\t\t\tindices[S].push(j)\n\t\t}\n\t}\n\n\tfor (const currentNumbers in occurence){\n\t\tlet currentLength = currentNumbers.length - Math.floor(currentNumbers.length/2) // possibleNumbers is a string of type: \"x,x,x,x,x\"\n\t\tif (occurence[currentNumbers] === currentLength) {\n\t\t\t// here we have to remove the elements of currentNumbers from all the others cells\n\t\t\tlet totalIndices = createIndicesArray(9)\n\t\t\tmyDeleteFunction(totalIndices, indices[currentNumbers])\n\t\t\tlet L1 = data[i][indices[currentNumbers][0]]\n\t\t\tfor (let k=0; k<totalIndices.length; k++){\n\t\t\t\tlet idx = totalIndices[k]\n\t\t\t\tif (myDeleteFunction(data[i][idx], L1)){\n\t\t\t\t\tmakeChange = true \n\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\tanimation.push(myData)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn makeChange\n}\n\nexport function nakedSubsetColumn(j, data, animation){\n\tlet makeChange = false \n\tlet indices = {}\n\tlet occurence = {}\n\t// Initialisation of indices and occurences\n\tfor (let i = 0; i<9; i++){\n\t\tif (typeof(data[i][j]) === \"object\"){\n\t\t\tlet S = data[i][j].toString()\n\t\t\toccurence[S] = 0\n\t\t\tindices[S] = [] \n\t\t}\n\t}\n\n\tfor (let i = 0; i<9; i++){\n\t\tif (typeof(data[i][j]) === \"object\"){\n\t\t\tlet S = data[i][j].toString()\n\t\t\toccurence[S]++\n\t\t\tindices[S].push(i)\n\t\t}\n\t}\n\n\tfor (const currentNumbers in occurence){\n\t\tlet currentLength = currentNumbers.length - Math.floor(currentNumbers.length/2) // possibleNumbers is a string of type: \"x,x,x,x,x\"\n\t\tif (occurence[currentNumbers] === currentLength) {\n\t\t\t// here we have to remove the elements of currentNumbers from all the others cells\n\t\t\tlet totalIndices = createIndicesArray(9)\n\t\t\tmyDeleteFunction(totalIndices, indices[currentNumbers])\n\t\t\tlet L1 = data[indices[currentNumbers][0]][j]\n\t\t\tfor (let k=0; k<totalIndices.length; k++){\n\t\t\t\tlet idx = totalIndices[k]\n\t\t\t\tif (myDeleteFunction(data[idx][j], L1)){\n\t\t\t\t\tmakeChange = true \n\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\tanimation.push(myData)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn makeChange\n}\n\n\nexport function nakedSubsetBox(k, data, animation){\n\tlet makeChange = false\n\tlet occurence = {}\n\tlet coordonate = {}\n\t// Initialisation of indices and occurences\n\tlet i = Math.floor(k/3)*3\n\tlet j = Math.floor(k%3)*3\n\tfor (let i1 = i; i1<i+3; i1++){\n\t\tfor (let j1 = j; j1<j+3; j1++){\n\t\t\tlet S = data[i1][j1].toString()\n\t\t\toccurence[S] = 0\n\t\t\tcoordonate[S] = []\n\t\t}\n\t}\n\n\tfor (let i1 = i; i1<i+3; i1++){\n\t\tfor (let j1 = j; j1<j+3; j1++){\n\t\t\tlet S = data[i1][j1].toString()\n\t\t\toccurence[S]++\n\t\t\tcoordonate[S].push([i1, j1])\n\t\t}\n\t}\n\n\tfor (const currentNumbers in occurence){\n\t\tlet currentLength = currentNumbers.length - Math.floor(currentNumbers.length/2)\n\t\tif (occurence[currentNumbers] === currentLength){\n\t\t\tlet totalCoordonates = []\n\t\t\tlet currentCoord = coordonate[currentNumbers][0]\n\t\t\tfor (let i1 = i; i1<i+3; i1++){\n\t\t\t\tfor (let j1 = j; j1<j+3; j1++){\n\t\t\t\t\ttotalCoordonates.push([i1,j1])\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(let i1 = 0; i1<coordonate[currentNumbers].length; i1++ ){\n\t\t\t\tlet coordToDelete = coordonate[currentNumbers][i1]\n\t\t\t\tremoveCouple(totalCoordonates, coordToDelete)\n\t\t\t}\n\t\t\tlet L1 = data[currentCoord[0]][currentCoord[1]]\n\t\t\tfor(let i1 = 0; i1<totalCoordonates.length; i1++){\n\t\t\t\tlet coord = totalCoordonates[i1]\n\t\t\t\tif (myDeleteFunction(data[coord[0]][coord[1]], L1)){\n\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\tanimation.push(myData)\n\t\t\t\t\tmakeChange = true \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn makeChange\n}\n\n\n\n\n\n\n","import {myDeleteFunction, isSubset, removeNumber, removeCouple, deepCopy} from \"./GenericFunctions\"\n\n\nexport function disjointChain(data, animation){\n\tlet makeChange = false \n\tfor (let i=0; i<9; i++){\n\t\tif (disjointChainRow(i, data, animation)){\n\t\t\tmakeChange = true \n\t\t} \n\t\tif (disjointChainColumn(i, data, animation)){\n\t\t\tmakeChange = true \n\t\t}\n\t\tif (disjointChainBox(i, data, animation)){\n\t\t\tmakeChange = true\n\t\t}\n\t}\n\treturn makeChange\n}\n\nexport function disjointChainRow(i, data, animation){\n\tlet makeChange = false\n\tfor(let j=0; j<9; j++){\n\t\tlet indices = []\n\t\tfor (let i =0; i<9; i++){\n\t\t\tif (j!= i) {\n\t\t\t\tindices.push(i)\n\t\t\t}\n\t\t}\n\t\tif (typeof(data[i][j])===\"object\") {\n\t\t\tlet L1 = data[i][j]\n\t\t\tlet objective = L1.length-1\n\t\t\tfor (let j2 = 0; j2<9; j2++){\n\t\t\t\tif (j2!=j && typeof(data[i][j2])===\"object\"){\n\t\t\t\t\tlet L2 = data[i][j2]\n\t\t\t\t\tif (isSubset(L1,L2)){\n\t\t\t\t\t\tobjective--\n\t\t\t\t\t\tremoveNumber(indices, j2)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (objective === 0) {\n\t\t\t\tfor (let k = 0; k<indices.length; k++){\n\t\t\t\t\tlet idx = indices[k]\t\t\t\n\t\t\t\t\tif (myDeleteFunction(data[i][idx], L1)){\n\t\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\t\tanimation.push(myData)\n\t\t\t\t\t\tmakeChange = true\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn makeChange\n}\n\n\nexport function disjointChainColumn(j, data, animation){\n\tlet makeChange = false\n\tfor(let i=0; i<9; i++){\n\t\tlet indices = []\n\t\tfor (let j =0; j<9; j++){\n\t\t\tif (i!= j) {\n\t\t\t\tindices.push(j)\n\t\t\t}\n\t\t}\n\t\tif (typeof(data[i][j])===\"object\") {\n\t\t\tlet L1 = data[i][j]\n\t\t\tlet objective = L1.length-1\n\t\t\tfor (let i2 = 0; i2<9; i2++){\n\t\t\t\tif (i2!=i && typeof(data[i2][j])===\"object\"){\n\t\t\t\t\tlet L2 = data[i2][j]\n\t\t\t\t\tif (isSubset(L1,L2)){\n\t\t\t\t\t\tobjective--\n\t\t\t\t\t\tremoveNumber(indices, i2)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tif (objective === 0) {\n\t\t\t\tfor (let k = 0; k<indices.length; k++){\n\t\t\t\t\tlet idx = indices[k]\t\t\t\n\t\t\t\t\tif (myDeleteFunction(data[idx][j], L1)){\n\t\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\t\tanimation.push(myData)\n\t\t\t\t\t\tmakeChange = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn makeChange\n}\n\n\nexport function disjointChainBox(k, data, animation){\n\tlet makeChange = false\n\tlet i = Math.floor(k/3)*3\n\tlet j = (k%3)*3\n\tfor(let i1=i; i1<i+3; i1++){\n\t\tfor (let j1 = j; j1<j+3; j1++){\n\t\t\tlet indices = []\n\t\t\tfor(let i2=i; i2<i+3; i2++){\n\t\t\t\tfor (let j2 = j; j2<j+3; j2++){\n\t\t\t\t\tindices.push([i2,j2])\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof(data[i1][j1]) === \"object\"){\n\t\t\t\tlet L1 = data[i1][j1]\n\t\t\t\tlet objective = L1.length \n\t\t\t\tfor(let i2=i; i2<i+3; i2++){\n\t\t\t\t\tfor (let j2 = j; j2<j+3; j2++){\n\t\t\t\t\t\tif (typeof(data[i2][j2]) === \"object\"){\n\t\t\t\t\t\t\tlet L2 = data[i2][j2]\n\t\t\t\t\t\t\tif (isSubset(L1, L2)){\n\t\t\t\t\t\t\t\tobjective--\n\t\t\t\t\t\t\t\tremoveCouple(indices, [i2, j2])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (objective === 0) {\n\t\t\t\t\tfor (let l = 0; l<indices.length; l++){\n\t\t\t\t\t\tlet i2 = indices[l][0]\n\t\t\t\t\t\tlet j2 = indices[l][1]\n\t\t\t\t\t\tif (myDeleteFunction(data[i2][j2], L1)){\n\t\t\t\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\t\t\t\tanimation.push(myData)\n\t\t\t\t\t\t\tmakeChange = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn makeChange\n}\n\n\n\n\n","import {isValid, updateGridAfterFill, deepCopy} from \"./GenericFunctions\"\n\nexport function loneNumber(data, animation) {\n\tlet makeChange = false\n\tfor(let i=0; i<9; i++){\n\t\tif (loneNumberRow(i,data, animation)){\n\t\t\tmakeChange = true\n\t\t}\t\n\t\tif (loneNumberColumn(i,data, animation)){\n\t\t\tmakeChange = true\n\t\t}\n\t\tif (loneNumberBox(i,data, animation)){\n\t\t\tmakeChange = true\n\t\t}\n\t}\n\treturn makeChange\n}\n\n\nexport function loneNumberRow(i, data, animation){\n\tlet makeChange = false \n\tlet occurence = {}\n\tlet coordonates = {}\n\tfor (let i=1; i<10; i++){\n\t\toccurence[i] = 0\n\t\tcoordonates[i] = []\n\t}\n\tfor (let k = 0; k<9; k++){\n\t\tif (typeof(data[i][k]) === \"object\"){\n\t\t\tlet currentList = data[i][k]\n\t\t\tfor (let idx=0; idx<currentList.length; idx++){\n\t\t\t\tlet currentNumber = currentList[idx]\n\t\t\t\toccurence[currentNumber]++\n\t\t\t\tcoordonates[currentNumber] = k\n\t\t\t}\n\t\t}\n\t}\n\tfor (let number=1; number<10; number++){\n\t\tif (occurence[number] === 1){\n\t\t\tconst currentLen = data[i][coordonates[number]].length\n\t\t\tif (currentLen>1){\n\t\t\t\tdata[i][coordonates[number]] = [number]\n\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\tanimation.push(myData)\n\t\t\t\tmakeChange = true\n\t\t\t}\t\t\n\t\t}\n\t}\n\treturn makeChange\n}\n\nexport function loneNumberColumn(j, data, animation){\n\tlet makeChange = false \n\tlet occurence = {}\n\tlet coordonates = {}\n\tfor (let i=1; i<10; i++){\n\t\toccurence[i] = 0\n\t\tcoordonates[i] = []\n\t}\n\tfor (let k = 0; k<9; k++){\n\t\tif (typeof(data[k][j]) === \"object\"){\n\t\t\tlet currentList = data[k][j]\n\t\t\tfor (let idx=0; idx<currentList.length; idx++){\n\t\t\t\tlet currentNumber = currentList[idx]\n\t\t\t\toccurence[currentNumber]++\n\t\t\t\tcoordonates[currentNumber] = k\n\t\t\t}\n\t\t}\n\t}\n\tfor (let number=1; number<10; number++){\n\t\tif (occurence[number] === 1){\n\t\t\tconst currentLen = data[coordonates[number]][j].length\n\t\t\tif (currentLen>1){\n\t\t\t\tdata[coordonates[number]][j] = [number]\n\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\tanimation.push(myData)\n\t\t\t\tmakeChange = true \n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\treturn makeChange\n}\n\nexport function loneNumberBox(k, data, animation){\n\tlet makeChange = false \n\tlet occurence = {}\n\tlet coordonates = {}\n\tlet i = Math.floor(k/3)*3\n\tlet j = (k%3)*3\n\tfor (let number=1; number<10; number++){\n\t\toccurence[number] = 0\n\t\tcoordonates[number] = []\n\t}\n\tfor (let i1 = i; i1<i+3; i1++){\n\t\tfor(let j1 = j; j1<j+3; j1++){\n\t\t\tif (typeof(data[i1][j1]) === \"object\"){\n\t\t\t\tlet currentList = data[i1][j1]\n\t\t\t\tfor (let idx=0; idx<currentList.length; idx++){\n\t\t\t\t\tlet currentNumber = currentList[idx]\n\t\t\t\t\toccurence[currentNumber]++\n\t\t\t\t\tcoordonates[currentNumber] = [i1, j1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (let number=1; number<10; number++){\n\t\tif (occurence[number] === 1){\n\t\t\tlet i1 = coordonates[number][0]\n\t\t\tlet j1 = coordonates[number][1]\n\t\t\tconst currentLen = data[i1][j1].length\n\t\t\tif (currentLen>1){\n\t\t\t\tdata[i1][j1] = [number]\n\t\t\t\tlet myData = deepCopy(data)\n\t\t\t\tanimation.push(myData)\n\t\t\t\tmakeChange = true \n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\treturn makeChange\n}\n\n","import {heuristicRoutine} from \"./Heuristics/GlobalHeuristic\"\nimport {isValid, deepCopy, updateGridAfterFill} from \"./Heuristics/GenericFunctions\"\n\n\nexport function heuristicBacktrack(data, animation){\n\n\t// 0) execute the heuristics until they don'change anything in data\n\theuristicRoutine(data, animation)\n\n\t// 1) identify the best cell to start with \n\tlet minLength = 10\n\tlet bestCell = []\n\tfor (let i = 0; i < 9; i++){\n\t\tfor (let j=0; j < 9; j++){\n\t\t\tif (typeof(data[i][j]) === \"object\"){\n\t\t\t\tif (data[i][j].length < minLength){\n\t\t\t\t\tminLength = data[i][j].length\n\t\t\t\t\tbestCell = [i,j]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2) Base-case: if minLength is still 10, there is no cell to fill -> return true \n\tif (minLength === 10){\n\t\treturn true\n\t}\n\t// 3) start to backtrack on bestCell\n\tlet i = bestCell[0]\n\tlet j = bestCell[1]\n\tlet currentNumbersToTest = data[i][j]\n\tfor (let k = 0; k < currentNumbersToTest.length; k++){\n\t\tlet currentNumber = currentNumbersToTest[k]\n\t\tlet newData = deepCopy(data)\n\t\tnewData[i][j] = currentNumber\n\t\tanimation.push(newData)\n\t\tlet newData2 = deepCopy(newData)\n\t\tupdateGridAfterFill(i, j, currentNumber, newData2, animation)\n\t\tif (heuristicBacktrack(newData2, animation)){\n\t\t\treturn true \n\t\t}  else {\n\t\t\tlet newData3 = deepCopy(newData)\n\t\t\tanimation.push(newData3)\n\t\t\tlet newData4 = deepCopy(data)\n\t\t\tanimation.push(newData4)\n\t\t}\n\t\t\n\t}\n\n\t// 4) if you come here, no can be placed in best cell so the grid is not correct -> return false!\n\treturn false\n\n\t// \t Note: What's append when the grid is incorrect? \n\t// If two cases are in conflict, after some time, one of them will have an empty list as the possible numbers when 0) is executed. \n\t// Then this will be identifyed as bestCell by 1)\n\t// Then, 3) will try to iterate on an empty object -> nothing happen \n\t// Thus, the algo come in 5) and return false\n}\n\n\n\n\n","import {nakedSubset} from \"./NakedSubset\";\nimport {disjointChain} from \"./DisjointChain\";\nimport {loneNumber} from \"./LoneNumber\";\n\n\nexport function heuristicRoutine2(data, animation){\n\tlet makeAdditionalTour = true \n\tlet i=0\n\twhile (i<1) {\n\t\tif (loneNumber(data, animation)){\n\t\t\tmakeAdditionalTour = true \n\t\t} else {\n\t\t\tmakeAdditionalTour = false\n\t\t}\n\t\tif (nakedSubset(data, animation)){\n\t\t\tmakeAdditionalTour = true \n\t\t} else {\n\t\t\tmakeAdditionalTour = false\n\t\t}\n\t\tif (disjointChain(data, animation)){\n\t\t\tmakeAdditionalTour = true \n\t\t} else {\n\t\t\tmakeAdditionalTour = false\n\t\t}\n\t\ti++\n\t}\n\treturn \n}\n\n\nexport function heuristicRoutine(data, animation){\n\tlet makeAdditionalTour = true \n\twhile (makeAdditionalTour) {\n\t\tif (loneNumber(data, animation)){\n\t\t\tmakeAdditionalTour = true \n\t\t} else {\n\t\t\tmakeAdditionalTour = false\n\t\t}\n\t\tif (nakedSubset(data, animation)){\n\t\t\tmakeAdditionalTour = true \n\t\t} else {\n\t\t\tmakeAdditionalTour = false\n\t\t}\n\t\tif (disjointChain(data, animation)){\n\t\t\tmakeAdditionalTour = true \n\t\t} else {\n\t\t\tmakeAdditionalTour = false\n\t\t}\n\t}\n\treturn \n}","import React,{Component} from \"react\";\nimport \"./DropdownButton.css\"\nimport {sudokuSolver} from \"../SudokuSolver\"\nimport greedySudokuSolver from \"../SolverAlgorithms/GreedyBacktrack\"\nimport {heuristicBacktrack, heuristicBacktrack2} from \"../SolverAlgorithms/HeuristicBacktrack\"\n\n\nconst SUCCESS_COLOR = \"rgba(105,225,185,1)\"\nconst MEAN_COLOR = \"rgb(255,165,40,1)\"\nconst DANGER_COLOR = \"rgba(245,100,140,1)\"\n\nclass DropdownButton extends Component{\n\n\tuseClassicBacktrack =() => {\n\t\tthis.props.setSolver(sudokuSolver, \"my-red-animation\", 0)\n\t}\n\n\tuseGreedyBacktrack = () => {\n\t\tthis.props.setSolver(greedySudokuSolver, \"my-orange-animation\", 1)\n\t}\n\n\tuseTwoStageAlgo = () => {\n\t\tthis.props.setSolver(heuristicBacktrack, \"my-green-animation\", 2)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div  className = \"dropdown\">\n\t\t\t\t\t<div className = \"projects\">\n\t\t\t\t\t\t<button className = \"dropdown-style\"> \n\t\t\t\t\t\t\t{this.props.children} \n\t\t\t\t\t\t\t<img \n\t\t\t\t\t\t\t\tsrc = \"/dropdown-icon.jpg\" \n\t\t\t\t\t\t\t\theight = \"15px\" \n\t\t\t\t\t\t\t\twidth = \"15px\"\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<ul >\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className = \"danger-button\" onMouseOver = {this.useClassicBacktrack}> Backtracking </div> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className = \"mean-button\" onMouseOver = {this.useGreedyBacktrack}> Greedy Backtrack </div> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li> \n\t\t\t\t\t\t\t\t<div className = \"success-button\" onMouseOver = {this.useTwoStageAlgo}> Heuristic + Backtrack  </div> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n} \n\nexport default DropdownButton","import React,{Component} from \"react\";\nimport \"./Trash.css\"\n\nvar initialX\nvar initialY\nvar currentX\nvar currentY\nvar myTrash \nvar rect\nvar dragging = false\n\n\nexport default class Trash extends Component {\n\n\n\thandleDragStart = (e) => {\n\t\tinitialX = e.clientX\n\t\tinitialY = e.clientY \n\t\tmyTrash = document.getElementsByClassName(\"trashContainer\")[0]\n\t\trect = myTrash.getBoundingClientRect()\n\t\tif (rect.right - initialX > 10 || rect.bottom - initialY>10){\n\t\t\tdragging = true\n\t\t}\n\t\t\n\t}\n\n\thandleDrag = (e) => {\n\t\tlet gridObject = document.getElementsByClassName(\"grid-container\")[0]\n\t\tlet grid = gridObject.getBoundingClientRect()\n\t\tif (dragging){\n\t\t\tcurrentX = e.clientX - initialX\n\t\t\tcurrentY = e.clientY - initialY\n\t\t\tmyTrash.style.cursor = \"grabbing\"\n\t\t\tif (rect.left + currentX >= grid.right){\n\t\t\t\tmyTrash.style.left = `${rect.left + currentX}px` \n\t\t\t\tmyTrash.style.top = `${rect.top + currentY}px`\n\t\t\t} else {\n\t\t\t\tmyTrash.style.top = `${rect.top + currentY}px`\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\thandleEndDrag = (e) => {\n\t\tdragging = false\n\t\tmyTrash.style.cursor = \"grab\"\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div \n\t\t\t\tclassName = \"trashContainer\" \n\t\t\t\tonMouseDown ={this.handleDragStart}\n\t\t\t\tonMouseMove = {this.handleDrag}\n\t\t\t\tonMouseUp = {this.handleEndDrag}>\n\t\t\t\t<div className =\"dragSection\">\n\t\t\t\t\tCick to move! \n\t\t\t\t</div>\n\t\t\t\tDrop numbers here\n\t\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n//","import React,{Component} from \"react\"\nimport {Button} from \"react-bootstrap\"\nimport {ButtonGroup} from \"react-bootstrap\"\nimport {sudokuSolver, isValid} from \"../SudokuSolver\"\nimport greedySudokuSolver from \"../SolverAlgorithms/GreedyBacktrack\"\nimport {deepCopy} from \"../SolverAlgorithms/Heuristics/GenericFunctions\"\nimport {createBoard} from \"../GridGenerator\"\nimport DropdownButton from \"../DropDown/Dropdown\"\nimport \"./ToolBar.css\"\n\n\nexport default class ToolBar extends Component {\n\n\tstate = {\n\t\tmatrices: \"\",\n\t\tanimation: \"my-red-animation\",\n\t\tsolver : sudokuSolver,\n\t\tlabel: 1,\n\t\tshowHelp: false, \n\t\tsolved: false,\n\t} \n\n\tactionAnimation = (Animation, animationSpeed, firstDelay, degressive) => {\n\t\tsetTimeout(() => {\n\t\t\tfor (let i=0; i<Animation.length; i++){\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tthis.props.setMatrix(Animation[i])\n\t\t\t\t},(i)*animationSpeed + degressive*i**2)\n\t\t\t}\n\t\t}, firstDelay)\n\t}\n\n\tsetSolver = (myFunction, newAnimation, newLabel) => {\n\t\tthis.setState({\n\t\t\tsolver: myFunction,\n\t\t\tanimation: newAnimation,\n\t\t\tlabel: newLabel,\n\t\t\tsolveButtonMsg: \"solve\",\n\t\t})\n\t}\n\n\tsolveTheGrid = () => {\n\t\tlet Animation = []\n\t\tlet delay = 0\n\t\tif (this.state.solved){\n\t\t\tthis.props.setMatrix(deepCopy(this.props.data.prevMatrix))\n\t\t\tthis.setState({\n\t\t\t\tsolved: false\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsolved: true\t\t\n\t\t\t})\n\t\t\tif (this.state.label === 2 && this.props.data.validNumbers === false ){\n\t\t\t\tthis.printValidNumbers()\n\t\t\t\tdelay = 1250\n\t\t\t} else if (this.state.label < 2 && this.props.data.validNumbers === true ){\n\t\t\t\tthis.printValidNumbers()\n\t\t\t\tdelay = 1250\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.state.solver(this.props.data.matrix, Animation)\n\t\t\t\tthis.actionAnimation(Animation, 70, 300,0)\n\t\t\t}, delay)\n\t\t}\n\t\t\n\t}\n\n\n\tgenerateNewGrid = () => {\n\t\tlet myAnimation = createBoard(this.state.matrices)\n\t\tlet newMatrix = myAnimation[myAnimation.length-1]\n\t\tthis.props.setPrevMatrix(deepCopy(newMatrix))\n\t\tthis.setState({\n\t\t\tsolved: false \n\t\t})\n\t\tif (this.props.data.validNumbers){\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.actionAnimation(myAnimation, 30,300,1)\n\t\t\t},600)\n\t\t\tthis.printValidNumbers()\n\t\t\t\n\t\t} else {\n\t\t\tthis.actionAnimation(myAnimation, 30,300,1)\n\t\t}\n\t\t\n\t}\n\n\tcomponentDidMount(){\n\t\tsetTimeout(()=>{\n\t\t\tfetch('data.txt')\n\t\t\t.then(function(response){\n\t\t\t\treturn response.text()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmatrices: data\n\t\t\t\t})\n\t\t\t})\n\t\t}, 2000)\n\t\t\n\t}\n\n\tprintValidNumbers = () => {\n\t\tlet preGrid = document.getElementsByClassName(\"grid\")[0]\n\t\tlet grid = document.getElementsByClassName(\"grid-container\")[0]\n\t\tlet subGrids = document.querySelectorAll(\".grid-item,.filled-grid-item\")\n\t\tthis.setState({\n\t\t\t\tshowHelp: !this.state.showHelp\n\t\t\t})\n\t\tif (this.props.data.validNumbers){\n\t\t\tgrid.style.border = \"0.3vh solid rgba(60,110,150,0.8)\"\n\t\t\tfor (let i=0; i<subGrids.length; i++){\n\t\t\t\tlet subGrid = subGrids[i]\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tsubGrid.style.border = \"0.1vh solid rgba(60,110,150,1)\"\n\t\t\t\t\tsubGrid.style.width = \"6.5vh\"\n\t\t\t\t\tsubGrid.style.height = \"6.5vh\"\n\t\t\t\t}, i*15)\t\n\t\t\t} \n\n\t\t\tthis.props.setValidNumbers()\n\t\t\tthis.props.setPrevMatrix(deepCopy(this.props.data.matrix))\n\t\t} else {\n\t\t\tgrid.style.border = \"0.45vh solid rgba(60,110,150,0.8)\"\n\t\t\tfor (let i=0; i<subGrids.length; i++){\n\t\t\t\tlet subGrid = subGrids[i]\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tsubGrid.style.border = \"0.1vh solid rgba(60,110,150,1)\"\n\t\t\t\t\tsubGrid.style.width = \"8.4vh\"\n\t\t\t\t\tsubGrid.style.height = \"8.4vh\"\n\t\t\t\t}, i*15)\t\n\t\t\t} \n\t\t\tthis.props.setValidNumbers()\n\t\t\tthis.props.setPrevMatrix(deepCopy(this.props.data.matrix))\n\t\t}\n\t}\n\n\trender(){\n\t\tconst helpInfo = this.state.showHelp? (\"Hide Help\") : (\"Show Help\")\n\t\tconst solveInfo = this.state.solved? (\"Empty the grid\") : (\"Solve\")\n\t\tconst myAnimation = this.state.solved? (\"my-blue-animation\") : (this.state.animation) \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className = \"bar\">\n\t\t\t\t\tSudoku Solvere\n\t\t\t\t</div>\n\t\t\t\t<div className = \"secondPartBar\">\n\t\t\t\t\t<DropdownButton setSolver = {this.setSolver}> Algorithms </DropdownButton>\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName = \"buttonStyle\"   \n\t\t\t\t\t\tonClick = {this.generateNewGrid}> \n\t\t\t\t\t\tChange grid \n\t\t\t\t\t</div>\n\t\t\t\t\t<div  \n\t\t\t\t\t\tclassName = \"buttonStyle\" \n\t\t\t\t\t\tonClick = {this.printValidNumbers}> \n\t\t\t\t\t\t{helpInfo}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName = \"solve-button\" \n\t\t\t\t\t\tonClick = {this.solveTheGrid} \n\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\tborderRadius: \"0vw 0.6vw 0.6vw 0vw\",\n\t\t\t\t\t\t\tfontSize: \"1.7vh\" ,\n\t\t\t\t\t\t\tanimationName: myAnimation}}> \n\t\t\t\t\t\t{solveInfo}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport Grid from './Components/Grid/Grid.jsx'\nimport DndKeyboard from './Components/DndKeyboard/DndKeyboard'\nimport ToolBar from './Components/ToolBar/ToolBar'\nimport Trash from './Components/Trash/Trash'\nimport {getMatrixOfValidNumbers} from \"./Components/SudokuSolver\"\nimport {deepCopy} from \"./Components/SolverAlgorithms/Heuristics/GenericFunctions\"\n\n\n\nclass App extends Component {\n\n\n\tstate = {\n\t\tmatrix: [\n\t\t\t\t[0,0,0,5,8,0,7,0,0],\n\t\t\t\t[0,9,7,0,0,3,0,0,1],\n\t\t\t\t[0,0,0,0,6,7,0,9,0],\n\t\t\t\t[0,0,1,0,9,0,0,0,5],\n\t\t\t\t[0,7,2,0,0,0,9,4,0],\n\t\t\t\t[8,0,0,0,4,0,1,0,0],\n\t\t\t\t[0,5,0,0,0,0,0,0,0],\n\t\t\t\t[2,0,0,0,0,0,3,8,0],\n\t\t\t\t[0,0,4,0,7,1,0,0,0]\n\t\t\t\t],\n\t\tprevMatrix: [\n\t\t\t\t[0,0,0,5,8,0,7,0,0],\n\t\t\t\t[0,9,7,0,0,3,0,0,1],\n\t\t\t\t[0,0,0,0,6,7,0,9,0],\n\t\t\t\t[0,0,1,0,9,0,0,0,5],\n\t\t\t\t[0,7,2,0,0,0,9,4,0],\n\t\t\t\t[8,0,0,0,4,0,1,0,0],\n\t\t\t\t[0,5,0,0,0,0,0,0,0],\n\t\t\t\t[2,0,0,0,0,0,3,8,0],\n\t\t\t\t[0,0,4,0,7,1,0,0,0]\n\t\t\t\t],\n\t\tvalidNumbers: false\n\t}\n\n\n\tchangeMatrix = (i,j,number) => {\n\t\tif (this.state.validNumbers) {\n\t\t\tlet myMatrix = this.state.matrix\n\t\t\tmyMatrix[i][j] = number\n\t\t\t\n\t\t\t\tconsole.log(myMatrix)\n\t\t\t\tthis.setState({\n\t\t\t\tmatrix: getMatrixOfValidNumbers(myMatrix)\n\t\t\t\t})\n\t\t} else {\n\t\t\tlet myMatrix = this.state.matrix\n\t\t\tmyMatrix[i][j] = number\n\t\t\tthis.setState({\n\t\t\t\tmatrix: myMatrix\n\t\t\t})\n\t\t}\n\t}\n\n\n\tsetValidNumbers = () => {\n\t\tif (this.state.validNumbers) {\n\t\t\tlet myMatrix = this.state.matrix\n\t\t\tfor (let i=0; i<9; i++){\n\t\t\t\tfor (let j=0; j<9; j++){\n\t\t\t\t\tif (myMatrix[i][j]>0 && typeof(myMatrix[i][j])===\"number\"){\n\t\t\t\t\t\tmyMatrix[i][j] = myMatrix[i][j]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmyMatrix[i][j] = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tmatrix: myMatrix,\n\t\t\t\tvalidNumbers: false\n\t\t\t})\n\t\t} else {\n\t\t\tlet myMatrix = this.state.matrix\n\t\t\tmyMatrix = getMatrixOfValidNumbers(myMatrix)\n\t\t\tthis.setState({\n\t\t\t\tmatrix: myMatrix,\n\t\t\t\tvalidNumbers: true\n\t\t\t})\n\t\t}\n\t}\n\n\tsetPrevMatrix = (myMatrix) => {\n\t\tthis.setState({\n\t\t\tprevMatrix: myMatrix\n\t\t})\n\t}\n\n\tsetMatrix = (myMatrix) => {\n\t\tthis.setState({\n\t\t\tmatrix: myMatrix\n\t\t})\n\t}\n\n\trender(){\n\t\treturn (\n\t    <section className=\"App\">\n\t    \t<ToolBar setPrevMatrix = {this.setPrevMatrix} setValidNumbers = {this.setValidNumbers} setMatrix = {this.setMatrix} data = {this.state}/>\n\t    \t<Trash/>\n\t\t\t<Grid matrix = {this.state.matrix} changeMatrix = {this.changeMatrix}/>\n\t\t\t<DndKeyboard  changeMatrix = {this.changeMatrix} matrix = {this.state.matrix}/>\n\t\t    </section>\n\t  );\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}